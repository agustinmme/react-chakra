{"version":3,"sources":["components/ToDo/Mensaje.js","components/ToDo/Form.js","components/ToDo/Dialogs/Dialogs.js","components/ToDo/ListPlus.js","components/ToDo/ToDo.js","components/ToDo/user/Usuario.js","components/buttonColorMode/ColorModo.js","App.js","index.js"],"names":["Mensaje","props","type","title","message","status","variant","flexDirection","alignItems","justifyContent","textAlign","height","boxSize","mr","mt","mb","fontSize","maxWidth","Form","onEnvio","color","texto","nom","changeNom","onSubmit","className","children","placeholder","size","value","onChange","e","target","m","colorScheme","Dialogs","_onDelete","id","_theme","React","useState","isOpen","setIsOpen","onClose","cancelRef","useRef","icon","Delete","onClick","leastDestructiveRef","fontWeight","ref","ml","ListPlus","Lista","onDelete","onEdit","theme","bg","py","px","base","md","shadow","rounded","sm","spacing","map","item","d","as","ArrowRightIcon","w","isTruncated","dato","Edit","Formulario","getPost","num","isDark","useColorMode","colorMode","nombre","setNombre","setId","Listado","setListado","modEdit","setModEdit","error","setError","maxW","newArray","filter","event","preventDefault","trim","NuevoArray","nuevoDato","uniqid","Usuario","posteos","justify","align","src","ColorModo","toggleColorMode","Sun","Moon","isRound","App","post","setPost","p","ToDo","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"4PA+BeA,MAvBf,SAAiBC,GAAQ,IACfC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QACrB,OACE,8BACE,eAAC,IAAD,CACEC,OAAiB,MAATH,EAAe,OAAS,UAChCI,QAAQ,SACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,UAAU,SACVC,OAAO,QAPT,UASE,cAAC,IAAD,CAAWC,QAAQ,OAAOC,GAAI,IAC9B,cAAC,IAAD,CAAYC,GAAI,EAAGC,GAAI,EAAGC,SAAS,KAAnC,SACGb,IAEH,cAAC,IAAD,CAAkBc,SAAS,KAA3B,SAAiCb,U,mCCG1Bc,MAxBf,YAA0D,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,UAC1C,OACE,mCACE,uBAAMC,SAAUL,EAASM,UAAU,MAAnC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,SAAS,UACzB,cAAC,IAAD,CACEC,YAAY,kBACZrB,QAAQ,UACRsB,KAAK,KACLC,MAAOP,EACPQ,SAAU,SAACC,GACTR,EAAUQ,EAAEC,OAAOH,aAIzB,cAAC,IAAD,CAAQI,EAAG,EAAG/B,KAAK,SAASgC,YAAad,EAAzC,SACGC,U,uEC2CIc,MAnDf,YAA6C,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,OAAU,EACdC,IAAMC,UAAS,GADD,mBACnCC,EADmC,KAC3BC,EAD2B,KAEpCC,EAAU,kBAAMD,GAAU,IAC1BE,EAAYL,IAAMM,SAExB,OACE,qCACE,cAAC,IAAD,CACEvC,QAASgC,EACTQ,KAAM,cAACC,EAAA,EAAD,IACNd,EAAG,EACHC,YAAY,MACZc,QAAS,kBAAMN,GAAU,MAG3B,cAAC,IAAD,CACED,OAAQA,EACRQ,oBAAqBL,EACrBD,QAASA,EAHX,SAKE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAmB3B,SAAS,KAAKkC,WAAW,OAA5C,4BAIA,cAAC,IAAD,yDAIA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,IAAKP,EAAWI,QAASL,EAAjC,oBAGA,cAAC,IAAD,CACET,YAAY,MACZc,QAAS,WACPZ,EAAUC,IAEZe,GAAI,EALN,oC,kBCOCC,MAxCf,YAAuD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAC3C,OACE,cAAC,IAAD,CACEC,GAAc,iBACdC,GAAG,IACHC,GAAI,CAAEC,KAAM,IAAKC,GAAI,MACrBC,OAAO,OACPC,QAAS,CAAEC,GAAI,MALjB,SAOE,cAAC,IAAD,CAAMC,QAAS,EAAf,SACGZ,EAAMa,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,UACE,eAAC,IAAD,CAAKC,EAAE,OAAO7D,WAAW,WAAzB,UACE,cAAC,IAAD,CAAU8D,GAAIC,IAAgBnD,MAAM,cACpC,cAAC,IAAD,CAAMoD,EAAE,MAAMpD,MAAM,WAAWqD,aAAW,EAA1C,SACGL,EAAKM,OAER,cAAC,IAAD,IACA,cAAC,EAAD,CACEtC,UAAWmB,EACXlB,GAAI+B,EAAK/B,GACTC,OAAQmB,EAAQ,UAAY,UAE9B,cAAC,IAAD,CACEnD,QAASmD,EAAQ,UAAY,QAC7BX,KAAM,cAAC6B,EAAA,EAAD,IACN1C,EAAG,EACHe,QAAS,WACPQ,EAAOY,IAETlC,YAAY,aAnBHkC,EAAK/B,Y,0BC2EfuC,EA5FI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAGvBC,EAAuB,SAFPC,cAAdC,UAD+B,EAKXzC,mBAAS,IALE,mBAKhC0C,EALgC,KAKxBC,EALwB,OAOnB3C,mBAAS,IAPU,mBAOhCH,EAPgC,KAO5B+C,EAP4B,OAST5C,mBAAS,IATA,mBAShC6C,EATgC,KASvBC,EATuB,OAWT9C,oBAAS,GAXA,mBAWhC+C,EAXgC,KAWvBC,EAXuB,OAabhD,mBAAS,MAbI,mBAahCiD,EAbgC,KAazBC,EAbyB,KAgEvC,OACE,cAAC,IAAD,CAAWC,KAAK,eAAe7E,GAAI,EAAnC,SACE,eAAC,IAAD,CAAOoD,QAAS,EAAhB,UACE,cAAC,IAAD,uBACA,cAAC,EAAD,CACEZ,MAAO+B,EACP9B,SAtCa,SAAClB,GACpB,GAAKkD,EAMHG,EAAS,wCANG,CACZ,IAAME,EAAWP,EAAQQ,QAAO,SAACzB,GAAD,OAAUA,EAAK/B,KAAOA,KACtDiD,EAAWM,GACXT,EAAU,IACVN,EAAQC,EAAM,KAkCVtB,OA5BK,SAACY,GACZoB,GAAW,GACXL,EAAUf,EAAKM,MACfU,EAAMhB,EAAK/B,IACXqD,EAAS,OAyBHjC,MAAOsB,IAGE,OAAVU,EACC,cAAC,EAAD,CAAStF,MAAM,SAASC,QAASqF,EAAOvF,KAAOqF,EAAgB,IAAN,MAEzD,6BAEF,cAAC,EAAD,CACEpE,QAASoE,EA/BA,SAACO,GAEhB,GADAA,EAAMC,iBACDb,EAAOc,OAAZ,CAIA,IAAMC,EAAaZ,EAAQlB,KAAI,SAACC,GAAD,OAC7BA,EAAK/B,KAAOA,EAAK,CAAEA,GAAIA,EAAIqC,KAAMQ,GAAWd,KAE9CkB,EAAWW,GACXT,GAAW,GACXL,EAAU,IACVO,EAAS,WATPA,EAAS,2CAtCG,SAACI,GAEf,GADAA,EAAMC,iBACDb,EAAOc,OAAZ,CAIE,IAAME,EAAY,CAChB7D,GAAI8D,MACJzB,KAAMQ,GAERI,EAAW,GAAD,mBAAKD,GAAL,CAAca,KACxBf,EAAU,IACVO,EAAS,MACTb,EAAQC,EAAM,QAVdY,EAAS,kCAgELtE,MAAOmE,EAAU,QAAU,OAC3BlE,MAAOkE,EAAU,UAAY,UAC7BjE,IAAK4D,EACL3D,UAAW4D,U,2BC1CNiB,MA/Cf,YAA+B,IAAZC,EAAW,EAAXA,QAEXtB,EAAuB,SADPC,cAAdC,UAGR,OACE,eAAC,IAAD,CAAMhD,EAAG,EAAGqE,QAAQ,SAASC,MAAM,SAAnC,UACE,cAAC,IAAD,CAAQC,IAAI,0CAA0C5E,KAAK,KAA3D,SACGyE,EAAU,EACT,cAAC,IAAD,CAAazF,QAAQ,MAAM8C,GAAG,YAA9B,SACE,cAAC,IAAD,CAAMtC,MAAO2D,EAAS,QAAU,QAAS/D,SAAS,KAAlD,SACGqF,MAIL,+BAGJ,eAAC,IAAD,CAAKjD,GAAG,IAAR,UACE,eAAC,IAAD,CAAMF,WAAW,OAAjB,6BAEE,cAAC,IAAD,CACEE,GAAG,IACHlB,YACEmE,GAAW,EACP,SACAA,GAAW,EACX,SACAA,GAAW,EACX,OACA,SATR,SAYGA,GAAW,EACR,UACAA,GAAW,EACX,OACAA,GAAW,EACX,QACA,cAGR,cAAC,IAAD,CAAMrF,SAAS,KAAf,8B,kBCzBOyF,MAff,WAAsB,IAAD,EACoBzB,cAA/BC,EADW,EACXA,UAAWyB,EADA,EACAA,gBACb3B,EAAuB,SAAdE,EACf,OACE,8BACE,cAAC,IAAD,CACE7B,GAAI,EACJN,KAAMiC,EAAS,cAAC4B,EAAA,EAAD,CAASvF,MAAM,WAAc,cAACwF,EAAA,EAAD,CAAUxF,MAAM,SAC5DyF,QAAQ,OACR7D,QAAS0D,OCUFI,MAlBf,WAAgB,IAAD,EACWtE,mBAAS,GADpB,mBACNuE,EADM,KACAC,EADA,KAGb,OACE,sBAAKvF,UAAU,WAAf,UACE,eAAC,IAAD,CAAM8E,MAAM,SAASD,QAAQ,SAA7B,UACE,cAAC,IAAD,UACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAKW,EAAE,IAAP,SACE,cAAC,EAAD,CAASZ,QAASU,SAGtB,cAACG,EAAD,CAAMrC,QAASmC,EAASlC,IAAKiC,QCZnCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAiBC,iBAAiB,UAClC,cAAC,EAAD,SAGFC,SAASC,eAAe,U","file":"static/js/main.a6e437ba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Mensaje(props) {\r\n  const { type, title, message } = props;\r\n  return (\r\n    <div>\r\n      <Alert\r\n        status={type === \"1\" ? \"info\" : \"warning\"}\r\n        variant=\"subtle\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        textAlign=\"center\"\r\n        height=\"200px\"\r\n      >\r\n        <AlertIcon boxSize=\"40px\" mr={0} />\r\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n          {title}\r\n        </AlertTitle>\r\n        <AlertDescription maxWidth=\"sm\">{message}</AlertDescription>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mensaje;\r\n","import React from \"react\";\r\n\r\nimport { Button, Input, InputLeftAddon, InputGroup } from \"@chakra-ui/react\";\r\n\r\nfunction Form({ onEnvio, color, texto, nom, changeNom }) {\r\n  return (\r\n    <>\r\n      <form onSubmit={onEnvio} className=\"row\">\r\n        <InputGroup>\r\n          <InputLeftAddon children=\"Tarea\" />\r\n          <Input\r\n            placeholder=\"Introduce texto\"\r\n            variant=\"outline\"\r\n            size=\"md\"\r\n            value={nom}\r\n            onChange={(e) => {\r\n              changeNom(e.target.value);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n        <Button m={4} type=\"submit\" colorScheme={color}>\r\n          {texto}\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogOverlay,\r\n  AlertDialogHeader,\r\n  Button,\r\n  AlertDialogFooter,\r\n  AlertDialogBody,\r\n  AlertDialogContent,\r\n  IconButton,\r\n} from \"@chakra-ui/react\";\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\n\r\nfunction Dialogs({ _onDelete, id, _theme }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        variant={_theme}\r\n        icon={<DeleteIcon />}\r\n        m={1}\r\n        colorScheme=\"red\"\r\n        onClick={() => setIsOpen(true)}\r\n      />\r\n\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={onClose}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Eliminar Tarea\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Estas seguro? No vas a poder volver atras.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={() => {\r\n                  _onDelete(id);\r\n                }}\r\n                ml={3}\r\n              >\r\n                Eliminar\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListIcon,\r\n  Box,\r\n  Spacer,\r\n  Text,\r\n  List,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport { ArrowRightIcon, EditIcon } from \"@chakra-ui/icons\";\r\n\r\nfunction ListPlus({ Lista, onDelete, onEdit, theme }) {\r\n  return (\r\n    <Box\r\n      bg={(\"white\", \"blackAlpha.200\")}\r\n      py=\"8\"\r\n      px={{ base: \"4\", md: \"10\" }}\r\n      shadow=\"base\"\r\n      rounded={{ sm: \"lg\" }}\r\n    >\r\n      <List spacing={3}>\r\n        {Lista.map((item) => (\r\n          <ListItem key={item.id}>\r\n            <Box d=\"flex\" alignItems=\"baseline\">\r\n              <ListIcon as={ArrowRightIcon} color=\"green.500\" />\r\n              <Text w=\"50%\" color=\"gray.500\" isTruncated>\r\n                {item.dato}\r\n              </Text>\r\n              <Spacer />\r\n              <Dialogs\r\n                _onDelete={onDelete}\r\n                id={item.id}\r\n                _theme={theme ? \"outline\" : \"solid\"}\r\n              />\r\n              <IconButton\r\n                variant={theme ? \"outline\" : \"solid\"}\r\n                icon={<EditIcon />}\r\n                m={1}\r\n                onClick={() => {\r\n                  onEdit(item);\r\n                }}\r\n                colorScheme=\"blue\"\r\n              />\r\n            </Box>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ListPlus;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Heading, Stack } from \"@chakra-ui/react\";\r\nimport Mensaje from \"./Mensaje\";\r\nimport Form from \"./Form\";\r\nimport ListPlus from \"./ListPlus\";\r\nimport uniqid from \"uniqid\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\n\r\nconst Formulario = ({ getPost, num }) => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const isDark = colorMode === \"dark\";\r\n\r\n  const [nombre, setNombre] = useState(\"\");\r\n\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const [Listado, setListado] = useState([]);\r\n\r\n  const [modEdit, setModEdit] = useState(false);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const addDate = (event) => {\r\n    event.preventDefault();\r\n    if (!nombre.trim()) {\r\n      setError(\"No puede agregar texto vacio.\");\r\n      return;\r\n    } else {\r\n      const nuevoDato = {\r\n        id: uniqid(),\r\n        dato: nombre,\r\n      };\r\n      setListado([...Listado, nuevoDato]);\r\n      setNombre(\"\");\r\n      setError(null);\r\n      getPost(num + 1);\r\n    }\r\n  };\r\n\r\n  const deleteNombre = (id) => {\r\n    if (!modEdit) {\r\n      const newArray = Listado.filter((item) => item.id !== id);\r\n      setListado(newArray);\r\n      setNombre(\"\");\r\n      getPost(num - 1);\r\n    } else {\r\n      setError(\"no puedes borrar mientras editas\");\r\n    }\r\n  };\r\n\r\n  const edit = (item) => {\r\n    setModEdit(true);\r\n    setNombre(item.dato);\r\n    setId(item.id);\r\n    setError(null);\r\n  };\r\n\r\n  const EditName = (event) => {\r\n    event.preventDefault();\r\n    if (!nombre.trim()) {\r\n      setError(\"No puedes cambiar el nombre a vacio...\");\r\n      return;\r\n    }\r\n    const NuevoArray = Listado.map((item) =>\r\n      item.id === id ? { id: id, dato: nombre } : item\r\n    );\r\n    setListado(NuevoArray);\r\n    setModEdit(false);\r\n    setNombre(\"\");\r\n    setError(null);\r\n  };\r\n  return (\r\n    <Container maxW=\"container.md\" mt={5}>\r\n      <Stack spacing={4}>\r\n        <Heading>TODO APP</Heading>\r\n        <ListPlus\r\n          Lista={Listado}\r\n          onDelete={deleteNombre}\r\n          onEdit={edit}\r\n          theme={isDark}\r\n        />\r\n\r\n        {error !== null ? (\r\n          <Mensaje title=\"Error!\" message={error} type={!modEdit ? \"1\" : \"2\"} />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Form\r\n          onEnvio={modEdit ? EditName : addDate}\r\n          color={modEdit ? \"green\" : \"blue\"}\r\n          texto={modEdit ? \"Aceptar\" : \"Agregar\"}\r\n          nom={nombre}\r\n          changeNom={setNombre}\r\n        />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\nimport { Box, Text, Badge, Flex, Avatar, AvatarBadge } from \"@chakra-ui/react\";\r\n\r\nfunction Usuario({ posteos }) {\r\n  const { colorMode } = useColorMode();\r\n  const isDark = colorMode === \"dark\";\r\n\r\n  return (\r\n    <Flex m={3} justify=\"center\" align=\"center\">\r\n      <Avatar src=\"https://picsum.photos/200/300?grayscale\" size=\"xl\">\r\n        {posteos > 0 ? (\r\n          <AvatarBadge boxSize=\"1em\" bg=\"green.500\">\r\n            <Text color={isDark ? \"black\" : \"white\"} fontSize=\"sm\">\r\n              {posteos}\r\n            </Text>\r\n          </AvatarBadge>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Avatar>\r\n      <Box ml=\"3\">\r\n        <Text fontWeight=\"bold\">\r\n          Mikel Castellano\r\n          <Badge\r\n            ml=\"1\"\r\n            colorScheme={\r\n              posteos >= 7\r\n                ? \"purple\"\r\n                : posteos >= 5\r\n                ? \"yellow\"\r\n                : posteos >= 3\r\n                ? \"gray\"\r\n                : \"orange\"\r\n            }\r\n          >\r\n            {posteos >= 7\r\n              ? \"DIAMOND\"\r\n              : posteos >= 5\r\n              ? \"GOLD\"\r\n              : posteos >= 3\r\n              ? \"PLATE\"\r\n              : \"BRONCE\"}\r\n          </Badge>\r\n        </Text>\r\n        <Text fontSize=\"sm\">Chakra-ui</Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Usuario;\r\n","import React from \"react\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\nimport { IconButton } from \"@chakra-ui/react\";\r\nimport { SunIcon, MoonIcon } from \"@chakra-ui/icons\";\r\n\r\nfunction ColorModo() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const isDark = colorMode === \"dark\";\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        ml={8}\r\n        icon={isDark ? <SunIcon color=\"yellow\" /> : <MoonIcon color=\"dark\" />}\r\n        isRound=\"true\"\r\n        onClick={toggleColorMode}\r\n      ></IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorModo;\r\n","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport ToDo from \"./components/ToDo/ToDo\";\r\nimport { Flex, Box } from \"@chakra-ui/react\";\r\nimport Usuario from \"./components/ToDo/user/Usuario\";\r\nimport ColorModo from \"./components/buttonColorMode/ColorModo\";\r\nfunction App() {\r\n  const [post, setPost] = useState(0); // Es un arreglo rapido para no refactorizar mas...\r\n\r\n  return (\r\n    <div className=\"App mt-5\">\r\n      <Flex align=\"center\" justify=\"center\">\r\n        <Box>\r\n          <ColorModo />\r\n        </Box>\r\n        <Box p=\"2\">\r\n          <Usuario posteos={post} />\r\n        </Box>\r\n      </Flex>\r\n      <ToDo getPost={setPost} num={post}></ToDo>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <ChakraProvider>\r\n    <ColorModeScript initialColorMode=\"light\"></ColorModeScript>\r\n    <App />\r\n  </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}