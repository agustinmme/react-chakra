{"version":3,"sources":["components/ToDo/Mensaje.js","components/ToDo/ToDo.js","components/user/Usuario.js","components/buttonColorMode/ColorModo.js","App.js","index.js"],"names":["Mensaje","props","type","title","message","status","variant","flexDirection","alignItems","justifyContent","textAlign","height","boxSize","mr","mt","mb","fontSize","maxWidth","Formulario","isDark","useColorMode","colorMode","useState","nombre","setNombre","id","setId","Listado","setListado","modEdit","setModEdit","error","setError","maxW","spacing","bg","py","px","base","md","shadow","rounded","sm","map","item","d","as","ArrowRightIcon","color","w","isTruncated","dato","icon","Delete","m","onClick","newArray","filter","deleteNombre","colorScheme","Edit","edit","onSubmit","event","preventDefault","trim","NuevoArray","nuevoDato","uniqid","className","children","placeholder","size","value","onChange","e","target","Usuario","justify","align","src","ml","fontWeight","ColorModo","toggleColorMode","Sun","Moon","isRound","App","p","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fa323e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Mensaje(props) {\r\n  const { type, title, message } = props;\r\n  return (\r\n    <div>\r\n      <Alert\r\n        status={type===\"1\"?\"info\":\"warning\"}\r\n        variant=\"subtle\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        textAlign=\"center\"\r\n        height=\"200px\"\r\n      >\r\n        <AlertIcon boxSize=\"40px\" mr={0} />\r\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n          {title}\r\n        </AlertTitle>\r\n        <AlertDescription maxWidth=\"sm\">\r\n          {message}\r\n        </AlertDescription>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mensaje;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Input,\r\n  InputLeftAddon,\r\n  InputGroup,\r\n  Container,\r\n  Text,\r\n  Heading,\r\n  Stack,\r\n  List,\r\n  ListItem,\r\n  ListIcon,\r\n  Box,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport Mensaje from \"./Mensaje\";\r\nimport { ArrowRightIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport uniqid from \"uniqid\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\n\r\nconst Formulario = () => {\r\n  const { colorMode } = useColorMode();\r\n  const isDark = colorMode === \"dark\";\r\n\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [Listado, setListado] = useState([]);\r\n\r\n  const [modEdit, setModEdit] = useState(false);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const addDate = (event) => {\r\n    event.preventDefault();\r\n    if (!nombre.trim()) {\r\n      setError(\"No puede agregar texto vacio.\");\r\n      return;\r\n    } else {\r\n      const nuevoDato = {\r\n        id: uniqid(),\r\n        dato: nombre,\r\n      };\r\n      setListado([...Listado, nuevoDato]);\r\n      setNombre(\"\");\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const deleteNombre = (id) => {\r\n    if (!modEdit) {\r\n      const newArray = Listado.filter((item) => item.id !== id);\r\n      setListado(newArray);\r\n      setNombre(\"\");\r\n    } else {\r\n      setError(\"no puedes borrar mientras editas\");\r\n    }\r\n  };\r\n\r\n  const edit = (item) => {\r\n    setModEdit(true);\r\n    setNombre(item.dato);\r\n    setId(item.id);\r\n    setError(null);\r\n  };\r\n\r\n  const EditName = (event) => {\r\n    event.preventDefault();\r\n    if (!nombre.trim()) {\r\n      setError(\"No puedes cambiar el nombre a vacio...\");\r\n      return;\r\n    }\r\n    const NuevoArray = Listado.map((item) =>\r\n      item.id === id ? { id: id, dato: nombre } : item\r\n    );\r\n    setListado(NuevoArray);\r\n    setModEdit(false);\r\n    setNombre(\"\");\r\n    setError(null);\r\n  };\r\n  return (\r\n    <Container maxW=\"container.md\" mt={5}>\r\n      <Stack spacing={4}>\r\n        <Heading>TODO APP</Heading>\r\n        <Box\r\n          bg={(\"white\", \"blackAlpha.200\")}\r\n          py=\"8\"\r\n          px={{ base: \"4\", md: \"10\" }}\r\n          shadow=\"base\"\r\n          rounded={{ sm: \"lg\" }}\r\n        >\r\n          <List spacing={3}>\r\n            {Listado.map((item) => (\r\n              <ListItem key={item.id}>\r\n                <Box d=\"flex\" alignItems=\"baseline\">\r\n                  <ListIcon as={ArrowRightIcon} color=\"green.500\" />\r\n                  <Text w=\"50%\" color=\"gray.500\" isTruncated>\r\n                    {item.dato}\r\n                  </Text>\r\n                  <Spacer />\r\n                  <IconButton\r\n                    variant={isDark ? \"outline\" : \"solid\"}\r\n                    icon={<DeleteIcon />}\r\n                    m={1}\r\n                    onClick={() => {\r\n                      deleteNombre(item.id);\r\n                    }}\r\n                    colorScheme=\"red\"\r\n                  />\r\n                  <IconButton\r\n                    variant={isDark ? \"outline\" : \"solid\"}\r\n                    icon={<EditIcon />}\r\n                    m={1}\r\n                    onClick={() => {\r\n                      edit(item);\r\n                    }}\r\n                    colorScheme=\"blue\"\r\n                  />\r\n                </Box>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n        {error !== null ? (\r\n          <Mensaje title=\"Error!\" message={error} type={!modEdit ? \"1\" : \"2\"} />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <form onSubmit={modEdit ? EditName : addDate} className=\"row\">\r\n          <InputGroup>\r\n            <InputLeftAddon children=\"Tarea\" />\r\n            <Input\r\n              placeholder=\"Introduce texto\"\r\n              variant=\"outline\"\r\n              size=\"md\"\r\n              value={nombre}\r\n              onChange={(e) => {\r\n                setNombre(e.target.value);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n          <Button m={4} type=\"submit\" colorScheme={modEdit ? \"green\" : \"blue\"}>\r\n            {modEdit ? \"Aceptar\" : \"Agregar\"}\r\n          </Button>\r\n        </form>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\nimport { Box, Text, Badge, Flex, Avatar, AvatarBadge } from \"@chakra-ui/react\";\r\n\r\nfunction Usuario() {\r\n  const { colorMode } = useColorMode();\r\n  const isDark = colorMode === \"dark\";\r\n\r\n  return (\r\n    <Flex m={3} justify=\"center\" align=\"center\">\r\n      <Avatar src=\"https://picsum.photos/200/300?grayscale\" size=\"xl\">\r\n        <AvatarBadge boxSize=\"1em\" bg=\"green.500\">\r\n          <Text color={isDark ? \"black\" : \"white\"} fontSize=\"sm\">\r\n            1\r\n          </Text>\r\n        </AvatarBadge>\r\n      </Avatar>\r\n      <Box ml=\"3\">\r\n        <Text fontWeight=\"bold\">\r\n          Mikel Castellano\r\n          <Badge ml=\"1\" colorScheme=\"green\">\r\n            Nuevo\r\n          </Badge>\r\n        </Text>\r\n        <Text fontSize=\"sm\">Chakra-ui</Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Usuario;\r\n","import React from \"react\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\nimport { IconButton } from \"@chakra-ui/react\";\r\nimport { SunIcon, MoonIcon } from \"@chakra-ui/icons\";\r\n\r\nfunction ColorModo() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const isDark = colorMode === \"dark\";\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        ml={8}\r\n        icon={isDark ? <SunIcon color=\"yellow\" /> : <MoonIcon color=\"dark\" />}\r\n        isRound=\"true\"\r\n        onClick={toggleColorMode}\r\n      ></IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorModo;\r\n","import \"./App.css\";\r\n\r\nimport Form from \"./components/ToDo/ToDo\";\r\nimport {  Flex, Box } from \"@chakra-ui/react\";\r\nimport Usuario from \"./components/user/Usuario\";\r\nimport ColorModo from \"./components/buttonColorMode/ColorModo\";\r\nfunction App() {\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App mt-5\">\r\n      <Flex align='center' justify='center'>\r\n        <Box>\r\n        <ColorModo/>\r\n        </Box>\r\n        <Box p=\"2\" >\r\n          <Usuario />\r\n        </Box>\r\n      </Flex>\r\n      <Form ></Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <ChakraProvider>\r\n    <ColorModeScript initialColorMode=\"light\"></ColorModeScript>\r\n    <App />\r\n  </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}